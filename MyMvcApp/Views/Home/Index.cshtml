@model IEnumerable<MyMvcApp.Models.Employee>


@{
    ViewData["Title"] = "Employee Management";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<h2>@ViewData["Title"]</h2>

<table class="table table-striped w-75" id="employeeTable">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Department</th>
            <th>Email</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var emp in Model)
        {
            @await Html.PartialAsync("_EmployeeRowPartial", emp)
        }
    </tbody>
</table>

<!-- Reusable Modal -->
<div class="modal fade" id="employeeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="employeeModalBody">
                <p class="text-muted">Loading...</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
document.addEventListener("DOMContentLoaded", () => {
    // ✅ Ensure modal elements exist before accessing them
    const modalEl = document.getElementById("employeeModal");
    const deleteModalEl = document.getElementById("deleteModal");
    const confirmDeleteBtn = document.getElementById("confirmDeleteBtn");

    if (!modalEl || !deleteModalEl || !confirmDeleteBtn) {
        console.error("Modal or button element not found in DOM. Check your HTML IDs.");
        return;
    }

    const modal = new bootstrap.Modal(modalEl);
    const deleteModal = new bootstrap.Modal(deleteModalEl);
    let currentDeleteId = null;

    function attachHandlers() {
        // Edit button logic
        document.querySelectorAll(".edit-btn").forEach(btn => {
            btn.onclick = () => {
                const id = btn.dataset.id;
                fetch(`/Home/EditEmployeePartial?id=${id}`)
                    .then(res => res.text())
                    .then(html => {
                        document.getElementById("employeeModalBody").innerHTML = html;
                        modal.show();
                    })
                    .catch(() => alert("Error loading edit form."));
            };
        });

        // Delete button logic
        document.querySelectorAll(".delete-btn").forEach(btn => {
            btn.onclick = () => {
                currentDeleteId = btn.dataset.id;
                deleteModal.show();
            };
        });
    }

    // ✅ Attach delete confirmation click handler safely
    confirmDeleteBtn.addEventListener("click", () => {
        if (!currentDeleteId) return;
        fetch(`/Home/DeleteEmployee`, {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: `id=${currentDeleteId}`
        })
        .then(res => {
            if (!res.ok) throw new Error("Delete failed");
            document.querySelector(`tr[data-id='${currentDeleteId}']`)?.remove();
            deleteModal.hide();
        })
        .catch(err => alert(err.message));
    });

    attachHandlers();

    // Reattach event listeners if table rows change dynamically
    const tbody = document.querySelector("#employeeTable tbody");
    if (tbody) {
        new MutationObserver(attachHandlers).observe(tbody, { childList: true });
    }
});
</script>
}





    @* <p><h2>Products List</h2></p>
    <table id="productsTable" class="display" style="width:100%">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
            <th>Category</th>
        </tr>
    </thead>
</table>
</div>
<script>
$(document).ready(function () {
    $('#productsTable').DataTable({
        ajax: {
            url: '/Home/GetProducts',   // <-- our API
            dataSrc: 'data'                 // tells DataTable where to find array
        },
        columns: [
            { data: 'id' },
            { data: 'name' },
            { data: 'price' },
            { data: 'category' }
        ],
        pageLength: 10
    });
});
</script> *@